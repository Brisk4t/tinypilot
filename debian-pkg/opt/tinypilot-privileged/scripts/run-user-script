#!/bin/bash

# Exit on first failure.
set -e

# Echo commands before executing them, by default to stderr.
set -x

# Exit on unset variable.
set -u

print_help() {
  cat <<EOF
Usage: ${0##*/} [--help] USER_SCRIPT
Executes a user script.
  --help        Optional. Display this help and exit.
  USER_SCRIPT   The name of the user script.
EOF
}

# Parse command-line arguments.
POSITIONAL_ARGS=()
while (( "$#" > 0 )); do
  case "$1" in
    --help)
      print_help
      exit
      ;;
   --*|-*)
      >&2 echo "Unknown flag: $1"
      >&2 echo "Use the '--help' flag for more information"
      exit 1
      ;;
    *)
      POSITIONAL_ARGS+=("$1") # Save positional argument.
      shift
      ;;
  esac
done
readonly POSITIONAL_ARGS
readonly USER_SCRIPT_NAME="${POSITIONAL_ARGS[0]:-}"

readonly USER_SCRIPT_DIR='/home/tinypilot/user-scripts'
readonly USER_SCRIPT_PATH="${USER_SCRIPT_DIR}/${USER_SCRIPT_NAME}"

# TODO: validate name for security reasons: [a-zA-Z0-9-_]+(\.[a-zA-Z0-9]+)?
# TODO: check no symlink
# TODO: check regular file
# TODO: check that executable
# TODO: resolve with `realpath` and check that it resides in `$USER_SCRIPT_DIR`

# Invoke user script.
"${USER_SCRIPT_PATH}"
