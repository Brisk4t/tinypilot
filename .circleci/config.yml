version: 2.1
jobs:
  check_whitespace:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: Check for trailing whitespace
          command: ./dev-scripts/check-trailing-whitespace
      - run:
          name: Check that all text files end in a trailing newline
          command: ./dev-scripts/check-trailing-newline
  check_bash:
    docker:
      - image: koalaman/shellcheck-alpine:v0.7.1
    steps:
      - run:
          name: Install dependencies
          command: apk add bash git openssh-client grep
      - checkout
      - run:
          name: Run static analysis on bash scripts
          command: ./dev-scripts/check-bash
  build_python:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - run:
          name: Create virtual environment
          command: python3 -m venv venv
      - run:
          name: Install requirements and run build script
          command: |
            . venv/bin/activate
            pip install --requirement requirements.txt
            pip install --requirement dev_requirements.txt
            ./dev-scripts/build-python
  build_javascript:
    docker:
      - image: circleci/node:14.17.5-stretch
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run build script
          command: ./dev-scripts/build-javascript
  e2e:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run:
          name: Run TinyPilot e2e tests
          command: ./e2e/docker-test
  build_deb_pkg:
    docker:
      - image: cimg/base:stable
    environment:
      # TODO: Find a better version number because Debian packages requires a
      # specific format so we can't just use the git commit hash.
      PKG_VERSION: "1.7.1"
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
      - run:
          name: Enable multiarch builds with QEMU
          command: |
            docker run \
              --rm \
              --privileged \
              multiarch/qemu-user-static \
              --reset \
              -p yes
      - run:
          name: Create multiarch build context
          command: docker context create builder
      - run:
          name: Create multiplatform builder
          command: |
            docker buildx create builder \
              --name builder \
              --driver docker-container \
              --use
      - run:
          name: Ensure builder has booted
          command: docker buildx inspect --bootstrap
      - run:
          name: Build docker image with .deb package
          command: |
            docker buildx build \
              --platform linux/arm/v7 \
              --build-arg PKG_VERSION \
              --target=artifact \
              --output type=local,dest=$(pwd)/releases/ \
              .
      # TODO: Push the .deb file to Backblaze.
      - store_artifacts:
          path: "releases/tinypilot-${PKG_VERSION}-1-armhf.deb"
workflows:
  test:
    jobs:
      - check_whitespace
      - check_bash
      - build_python
      - build_javascript
      - build_deb_pkg # TODO: Limit this to master
      - e2e:
          filters:
            branches:
              only: master
