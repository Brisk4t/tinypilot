#!/usr/bin/env python3

# Renders a Jinja2 template using TinyPilot settings data.

# To test:
#
#   $ TEMPLATE_FILE=$(mktemp) && \
#       echo 'KEYBOARD_PATH = {{ tinypilot_keyboard_interface }}'  \
#           >> ${TEMPLATE_FILE} && \
#       echo 'MOUSE_PATH = {{ tinypilot_mouse_interface }}' \
#           >> ${TEMPLATE_FILE} && \
#       PYTHONPATH="${PWD}/app" ./scripts/render-template < ${TEMPLATE_FILE}

# Ignore pylint complaint that this filename has a dash instead of an
# underscore.
# pylint:disable=invalid-name

import argparse
import io
import os
import sys

import render_template

# Define default settings for TinyPilot values. The YAML data in
# _USER_OVERRIDES_PATH take precedence over these defaults.
_DEFAULTS = {
    'tinypilot_keyboard_interface': '/dev/hidg0',
    'tinypilot_mouse_interface': '/dev/hidg1',
}

_USER_OVERRIDES_PATH = '/home/tinypilot/settings.yml'


def main(_):
    user_overrides_file = io.StringIO('')
    if os.path.exists(_USER_OVERRIDES_PATH):
        with open(_USER_OVERRIDES_PATH, encoding='utf8') as f:
            user_overrides_file = io.StringIO(f.read())

    print(render_template.render(_DEFAULTS, user_overrides_file, sys.stdin))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        prog='TinyPilot Template Renderer',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    main(parser.parse_args())
